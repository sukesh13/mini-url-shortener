require('mocha');
var assert = require('assert');

var shortId = require('shortid');
var bigInt = require('big-integer');
var generate = require('../');

var characters = generate.characters();
var original = shortId.characters();

describe('decode', function(){
    for(var i=1000;i--;){
        var destination = generate();
        var source = decode(destination);
        it(destination + ' should source of ' + source, function(done){
            assert(source, generate.source);
            done();
        });
    }
});

function decode(destination){
    temp = '';
    var hash = {};
    for(var i=0;i<characters.length;i++)
    {
        hash[characters.charAt(i)] = i;
    }
    for(var i=0; i<destination.length; i++)
    {
        temp += '<'+hash[destination.charAt(i)].toString()+'>';
    }
    bigint = bigInt(temp, characters.length);
    var new_destination = '';
    while(!bigint.isZero())
    {
        low = bigint.mod(original.length);
        new_destination=original.charAt(low)+new_destination;
        bigint = bigint.divide(original.length);
    }
    return new_destination;
}
